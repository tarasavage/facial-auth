[project]
name = "face-link"
version = "0.1.0"
description = """
Secure authentication service integrating AWS Cognito with facial recognition capabilities.
Provides seamless biometric authentication flow, face matching verification, and user identity management.
Built for enhanced security and frictionless user experience in modern applications."""
readme = "README.md"
requires-python = ">=3.12.1"
dependencies = [
    "alembic>=1.14.1",
    "asyncpg>=0.30.0",
    "authlib>=1.4.1",
    "boto3>=1.36.9",
    "fastapi[standard]>=0.115.8",
    "itsdangerous>=2.2.0",
    "passlib[bcrypt]>=1.7.4",
    "psycopg2>=2.9.10",
    "pydantic-settings>=2.7.1",
    "pyjwt[crypto]>=2.10.1",
    "requests>=2.32.3",
    "ruff>=0.9.4",
    "sqlmodel>=0.0.22",
]


[tool.ruff]
    exclude = [
        ".bzr",
        ".direnv",
        ".eggs",
        ".git",
        ".git-rewrite",
        ".hg",
        ".ipynb_checkpoints",
        ".mypy_cache",
        ".nox",
        ".pants.d",
        ".pyenv",
        ".pytest_cache",
        ".pytype",
        ".ruff_cache",
        ".svn",
        ".tox",
        ".venv",
        ".vscode",
        "__pypackages__",
        "_build",
        "buck-out",
        "build",
        "dist",
        "node_modules",
        "site-packages",
        "venv",
        "__init__.py",
    ]
    
    line-length = 120
    indent-width = 4
    target-version = "py311"
    
    [tool.ruff.lint]
    fixable = ["ALL"]
    
    # Allow unused variables when underscore-prefixed.
    dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
    
    [tool.ruff.format]
    
    # Like Black, use double quotes for strings.
    quote-style = "double"
    
    # Like Black, indent with spaces, rather than tabs.
    indent-style = "space"
    
    # Like Black, respect magic trailing commas.
    skip-magic-trailing-comma = false
    
    # Like Black, automatically detect the appropriate line ending.
    line-ending = "auto"

[dependency-groups]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
]

